// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persons.API.Database;

#nullable disable

namespace Persons.API.Migrations
{
    [DbContext(typeof(PersonsDbContext))]
    partial class PersonsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Persons.API.Database.Entities.CountryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("AlphaCode3")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("alpha_code_3");

                    b.Property<Guid?>("CountryEntityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CraetedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_by");

                    b.Property<string>("CraetedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_by");

                    b.Property<string>("UpdatedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("CountryEntityId");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("Persons.API.Database.Entities.PersonEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("TEXT")
                        .HasColumnName("country_id");

                    b.Property<string>("CraetedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_by");

                    b.Property<string>("CraetedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_date");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("dni");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("last_name");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_by");

                    b.Property<string>("UpdatedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("persons");
                });

            modelBuilder.Entity("Persons.API.Database.Entities.CountryEntity", b =>
                {
                    b.HasOne("Persons.API.Database.Entities.CountryEntity", null)
                        .WithMany("Persons")
                        .HasForeignKey("CountryEntityId");
                });

            modelBuilder.Entity("Persons.API.Database.Entities.PersonEntity", b =>
                {
                    b.HasOne("Persons.API.Database.Entities.CountryEntity", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Persons.API.Database.Entities.CountryEntity", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
